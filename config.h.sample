//// SKETCH
#define SKETCH_NAME "[ALOES NODE WEBCAM]"
#define SKETCH_VERSION "0.5"

/// GLOBALS
#define DEBUG 3 // from 0 to 4
#define BAUD_RATE 115200

bool resetConfig = false, wifiResetConfig = false; // set to true to reset FS and/or Wifimanager, don't forget to set this to false after
unsigned long configTimeout = 200, minDelayBetweenframes = 1000, reconnectInterval = 1000, debouncerInterval = 2000;
unsigned long buttonPressTimeStamp;
bool shouldSaveConfig = true, executeOnce = false, manualConfig = false;
bool transmitNow = false, transmitStream = false;
bool timelapse = false, base64encoding = false;
int configCount = 0, wifiFailCount = 0, mqttFailCount = 0, mqttMaxFailedCount = 10, configMode = 0, buttonState;
volatile byte state = LOW;

// ESP
#define BOUNCE_LOCK_OUT
#define OTA_BUTTON_PIN D3
#define STATE_LED D4

//// ARDUCAM
#define CS 16

/// NETWORK PARAMS
#define ID_TYPE 0 // 0 : prefix+espCHipId - 1 : prefix+MACadress - 2 : prefix+EUI-64 address
#define CLIENT_SECURE 0
#define MQTT_CLIENT 1
#define WEB_SERVER 0
#define NTP_SERVER 0

/////////

char devicePrefix[8] = "Camera";
char masterTopic[60], captureTopic[80], streamTopic[80];
const char* defaultWifiSSID = "";
const char* defaultWifiPass = "";
const char* defaultMqttServer = "192.168.1.192";
const char* defaultMqttPort = "1883";
const char* defaultMqttUser = "";
const char* defaultMqttPassword = "";
const char* defaultMqttTopicIn = "test-in";
const char* defaultMqttTopicOut = "test-out";

//  "pattern": "+prefixedDevEui/+method/+omaObjectId/+sensorId/+omaResourcesId",
struct Message {
  char method[5];
  char omaObjectId[5];
  char sensorId[25];
  char omaResourcesId[5];
  char* payload;
  char masterTopic[60];
  char captureTopic[80];
  char streamTopic[80];
};

struct Config {
  char devEui[20];
  char devicePass[40] = "motdepasse";
  char inPrefix[10] = "-in";
  char outPrefix[10] = "-out";
  char mqttServer[40];
  char mqttPort[7];
  char mqttClient[50];
  char mqttUser[40];
  char mqttPassword[70];
  char mqttTopicOut[50];
  char mqttTopicIn[50];
  char staticIp[16] = "192.168.1.35";
  char staticGw[16] = "192.168.1.254";
  char staticSn[16] = "91.121.61.147";
  char camResolution[4] = "4";
  char camFpm[4] = "3";
};

//// FILE / STREAM MANAGER
static const size_t camBufferSize = 1024; // 4096; //2048; //1024;
static const size_t objBufferSize = 512;
static const int fileSpaceOffset = 700000;
const String otaFile = "ota.txt"; const String resFile = "res.txt"; const String fpmFile = "fpm.txt"; const String configFileName = "config.json";
int fileTotalKB = 0;
int fileUsedKB = 0;
int fileCount = 0;
String errMsg = "";
int resolution = 4; int fpm = 3;
int otaSignal = 0;

//// NTP
#if NTP_SERVER == 1
static const char ntpServerName[] = "fr.pool.ntp.org";
const int timeZone = 1;     // Central European Time
unsigned int localPort = 8888;  // local port to listen for UDP packets
#endif
